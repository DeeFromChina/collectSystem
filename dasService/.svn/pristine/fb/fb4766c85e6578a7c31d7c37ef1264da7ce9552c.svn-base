package com.golead.dasService.communication;

import io.netty.channel.Channel;
import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.SimpleChannelInboundHandler;
import io.netty.channel.group.ChannelGroup;
import io.netty.channel.group.DefaultChannelGroup;
import io.netty.util.concurrent.GlobalEventExecutor;

import java.net.InetAddress;

import org.apache.log4j.Logger;

import com.golead.dasService.DasService;

public class CommunicationServerHandler extends SimpleChannelInboundHandler<String> {

   private static Logger         logger   = Logger.getLogger(CommunicationServerHandler.class);

   public static ChannelGroup    channels = new DefaultChannelGroup(GlobalEventExecutor.INSTANCE);

   private CommunicationCallback communicationCallback;

   public CommunicationServerHandler(CommunicationCallback communicationCallback) {
      this.communicationCallback = communicationCallback;
   }

   @Override
   protected void channelRead0(ChannelHandlerContext ctx, String message) throws Exception {
      // 收到消息直接打印输出
      communicationCallback.command(ctx.channel().remoteAddress().toString(), message);
      // 返回客户端消息 - 我已经接收到了你的消息
      ctx.writeAndFlush("命令接受成功!\n");
   }

   @Override
   public void handlerAdded(ChannelHandlerContext ctx) throws Exception {
      Channel incoming = ctx.channel();
//      logger.info("远程数据通讯客户端：" + incoming.remoteAddress() + "连接成功。");
      channels.add(incoming);
   }

   @Override
   public void handlerRemoved(ChannelHandlerContext ctx) throws Exception {
      Channel incoming = ctx.channel();
//      logger.info("远程数据通讯客户端：" + incoming.remoteAddress() + "离开。");
      channels.remove(incoming);
   }

   @Override
   public void channelActive(ChannelHandlerContext ctx) throws Exception {
      logger.info("远程数据通讯客户端：" + ctx.channel().remoteAddress() + "连接成功。");
      ctx.writeAndFlush("远程数据通讯服务端" + InetAddress.getLocalHost().getHostName() + "连接成功!\n");
      super.channelActive(ctx);
   }

   @Override
   public void channelInactive(ChannelHandlerContext ctx) throws Exception {
      logger.info("远程数据通讯客户端:" + ctx.channel().remoteAddress() + "离开。");
   }

   @Override
   public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) {
      logger.error("远程数据通讯客户端:" + ctx.channel().remoteAddress() + "异常。");
//      cause.printStackTrace();
      ctx.close();
   }
   
   public void channelRead(ChannelHandlerContext ctx, Object msg) { 
      System.out.println("server received data :" + msg); 
      ctx.write(msg);//写回数据，
    } 
}