package com.golead.disManager.ui.composite;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.Map;
import java.util.Properties;

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.layout.FormAttachment;
import org.eclipse.swt.layout.FormData;
import org.eclipse.swt.layout.FormLayout;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.DateTime;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Menu;
import org.eclipse.swt.widgets.MenuItem;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.TabFolder;
import org.eclipse.swt.widgets.TabItem;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableColumn;
import org.eclipse.swt.widgets.TableItem;

import com.golead.disManager.communication.CommunicationClient;
import com.golead.disManager.communication.CommunicationClientCallback;
import com.golead.disManager.dao.model.Company;
import com.golead.disManager.ui.dialog.StationDialog;
import com.golead.disManager.ui.provider.StationContentProvider;
import com.golead.disManager.ui.provider.StationTableLabelProvider;
import com.golead.disManager.util.Util;

import swing2swt.layout.BorderLayout;

public class StationComposite extends Composite{
   private Shell      shell;
   private Table tblStation;
   private DateTime dtCollectStart;
   private Map<String, CommunicationClient> commClients;
   private Display                          display;
   
   public StationComposite(Composite parent, int style) {
      super(parent, style);
      shell = parent.getShell();
      setLayout(new BorderLayout(0, 0));
      
      Composite composite = new Composite(this, SWT.NONE);
      composite.setLayoutData(BorderLayout.NORTH);
      composite.setLayout(new FormLayout());
      
      Label lblCollect = new Label(composite, SWT.NONE);
      lblCollect.setAlignment(SWT.RIGHT);
      FormData fd_lblCollect = new FormData();
      fd_lblCollect.top = new FormAttachment(0, 10);
      fd_lblCollect.bottom = new FormAttachment(100, -10);
      fd_lblCollect.left = new FormAttachment(0, 5);
      fd_lblCollect.width = 100;
      lblCollect.setLayoutData(fd_lblCollect);
      lblCollect.setText("查询时间：");

      dtCollectStart = new DateTime(composite, SWT.BORDER);
      FormData fd_dtCollectStart = new FormData();
      fd_dtCollectStart.top = new FormAttachment(0, 5);
      fd_dtCollectStart.bottom = new FormAttachment(100, -5);
      fd_dtCollectStart.left = new FormAttachment(lblCollect, 5);
      fd_dtCollectStart.width = 130;
      dtCollectStart.setLayoutData(fd_dtCollectStart);

      Button btnSearch = new Button(composite, SWT.NONE);
      btnSearch.addSelectionListener(new SelectionAdapter() {
         @Override
         public void widgetSelected(SelectionEvent e) {
            Search();
         }
      });
      FormData fd_btnSearch = new FormData();
      fd_btnSearch.top = new FormAttachment(0, 5);
      fd_btnSearch.bottom = new FormAttachment(100, -5);
      fd_btnSearch.left = new FormAttachment(dtCollectStart, 5);
      btnSearch.setLayoutData(fd_btnSearch);
      btnSearch.setText("    查询    ");
      
      Button btnStation = new Button(composite, SWT.NONE);
      btnStation.addSelectionListener(new SelectionAdapter() {
         @Override
         public void widgetSelected(SelectionEvent e) {
            StationDialog sd =new StationDialog(shell, SWT.NONE | SWT.APPLICATION_MODAL);
            sd.open();
         }
      });
      FormData fd_btnStation = new FormData();
      fd_btnStation.top = new FormAttachment(0, 5);
      fd_btnStation.bottom = new FormAttachment(100, -5);
      fd_btnStation.left = new FormAttachment(btnSearch, 5);
      btnStation.setLayoutData(fd_btnStation);
      btnStation.setText("   查询加油站   ");
      
      Button btnUnloadStation = new Button(composite, SWT.NONE);
      btnUnloadStation.addSelectionListener(new SelectionAdapter() {
         @Override
         public void widgetSelected(SelectionEvent e) {
            findUnload();
         }
      });
      FormData fd_btnUnloadStation = new FormData();
      fd_btnUnloadStation.top = new FormAttachment(0, 5);
      fd_btnUnloadStation.bottom = new FormAttachment(100, -5);
      fd_btnUnloadStation.left = new FormAttachment(btnStation, 5);
      btnUnloadStation.setLayoutData(fd_btnUnloadStation);
      btnUnloadStation.setText("   未加载加油站   ");
      
      tblStation = new Table(this, SWT.BORDER | SWT.FULL_SELECTION);
      tblStation.setLayoutData(BorderLayout.CENTER);
      tblStation.setHeaderVisible(true);
      tblStation.setLinesVisible(true);
      
      TableColumn clmnOrg = new TableColumn(tblStation, SWT.NONE);
      clmnOrg.setWidth(200);
      clmnOrg.setText("所属分公司");
      
      TableColumn clmnNo = new TableColumn(tblStation, SWT.NONE);
      clmnNo.setWidth(200);
      clmnNo.setText("加油站编号");

      TableColumn clmnStation = new TableColumn(tblStation, SWT.NONE);
      clmnStation.setWidth(150);
      clmnStation.setText("加油站名称");

      TableColumn clmnTransTime = new TableColumn(tblStation, SWT.NONE);
      clmnTransTime.setWidth(150);
      clmnTransTime.setText("传送时间");

      TableColumn clmnTransStatus = new TableColumn(tblStation, SWT.NONE);
      clmnTransStatus.setWidth(100);
      clmnTransStatus.setText("传送状态");
      
      TableColumn clmnloadTime = new TableColumn(tblStation, SWT.NONE);
      clmnloadTime.setWidth(150);
      clmnloadTime.setText("加载时间");
      
      TableColumn clmnloadStatus = new TableColumn(tblStation, SWT.NONE);
      clmnloadStatus.setWidth(100);
      clmnloadStatus.setText("加载状态");
      
      Menu popStation = new Menu(tblStation);
      tblStation.setMenu(popStation);

//      MenuItem popItemConnect = new MenuItem(popStation, SWT.NONE);
//      popItemConnect.addSelectionListener(new SelectionAdapter() {
//         @Override
//         public void widgetSelected(SelectionEvent e) {
//            TableItem[] tableItems = tblStation.getSelection();
//            if (tableItems.length == 0) return;
//            Map<String, Object> map = (Map<String, Object>) tableItems[0].getData();
//            CommunicationClient commClient = commClients.get(map.get("id").toString());
//            if (commClient == null) {
//               commClient = new CommunicationClient(map.get("ip").toString(), new Integer(map.get("port").toString()), new CommunicationClientCallback() {
//                  @Override
//                  public void command(String source, String message) {
//                     deal(source, message);
//                  }
//               });
//               commClient.start();
//               commClients.put(map.get("id").toString(), commClient);
//            }
//            else if (commClient.getStatus() == CommunicationClient.CONN_STATUS_CONNECT) {
//               Util.alert(shell, "提示", "服务器已连接。");
//            }
//         }
//      });
//      popItemConnect.setText("连接加油站");
//
//      MenuItem popItemDisconnect = new MenuItem(popStation, SWT.NONE);
//      popItemDisconnect.addSelectionListener(new SelectionAdapter() {
//         @Override
//         public void widgetSelected(SelectionEvent e) {
//            CommunicationClient commClient = commClients.get("192.168.1.116");
//            if (commClient == null) {
//               Util.alert(shell, "提示", "服务器未连接。");
//               return;
//            }
//            if (commClient.getStatus() == CommunicationClient.CONN_STATUS_CONNECT) {
//               commClient.close();
//               commClients.remove("192.168.1.116");
//            }
//            else {
//               Util.alert(shell, "提示", "服务器未连接。");
//            }
//         }
//      });
//      popItemDisconnect.setText("断开连接");
//
//      MenuItem menuItem = new MenuItem(popStation, SWT.SEPARATOR);
//
//      MenuItem popItemCommand = new MenuItem(popStation, SWT.NONE);
//      popItemCommand.addSelectionListener(new SelectionAdapter() {
//         @Override
//         public void widgetSelected(SelectionEvent e) {
//            CommunicationClient commClient = commClients.get("192.168.1.116");
//            if (commClient == null) {
//               Util.alert(shell, "提示", "服务器还未连接。");
//               return;
//            }
//            if (commClient.getStatus() == CommunicationClient.CONN_STATUS_CONNECT) {
//               commClient.send("echo");
//            }
//            else {
//               Util.alert(shell, "提示", "服务器还未连接。");
//            }
//         }
//      });
//      popItemCommand.setText("命令");
   }
   
   public void load(String datatime) {
      try {
         tblStation.removeAll();
         Properties stationProps = new Properties();
         Properties props = new Properties();
         InputStreamReader inr = new InputStreamReader(new FileInputStream(System.getProperty("user.dir") + "\\station.properties"), "UTF-8");
         stationProps.load(inr);//加油站信息
         inr.close();
         inr = new InputStreamReader(new FileInputStream(System.getProperty("user.dir") + "\\config.properties"), "UTF-8");
         props.load(inr);//config.properties
         inr.close();
         String fileName = props.getProperty("ftpServer.dasDataDir").toString();
         if(!fileName.endsWith(File.separator)){
            fileName = fileName + File.separator;
         }
         //分公司
         File[] fileDir = new File(fileName).listFiles();
         long todayStart = Long.valueOf(datatime+"000000");
         long todayEnd = Long.valueOf(datatime+"235959");
         //每一家分公司
         for(File file : fileDir){
            File[] childFiles = new File(file.getPath()).listFiles();
            TableItem item = new TableItem(tblStation, SWT.NONE);
            String company = file.getName();
            //加油站
            for(File childFile : childFiles){
               File[] cfgFiles = new File(childFile.getPath()).listFiles(new com.golead.disService.filter.NameFilter(".cfg"));
               //加油站当天传送信息
               String station = "";
               station = childFile.getName().replace(".cfg", "");
               String no = "";
               no = stationProps.getProperty(station) == null ? "" : stationProps.getProperty(station).toString();
               for(File cfgFile : cfgFiles){
                  Properties cfgProps = new Properties();
                  InputStreamReader inSR = new InputStreamReader(new FileInputStream(cfgFile.getPath()), "UTF-8");
                  cfgProps.load(inSR);
                  inSR.close();
                  String sendTime = "";
                  String sendStatus = "";
                  String loadTime = "";
                  String loadStatus = "";
                  long time = Long.valueOf(cfgFile.getName().replace(".cfg", ""));
                  if(todayStart<Long.valueOf(cfgFile.getName().replace(".cfg", "")) && Long.valueOf(cfgFile.getName().replace(".cfg", ""))<todayEnd){
                     sendTime = cfgProps.getProperty("catalog.sendTime")==null ? "" : cfgProps.get("catalog.sendTime").toString();
                     sendStatus = sendTime == "" ? "" : "已传送";
                     loadTime = "加载时间";
                     loadStatus = "finish".equals(cfgProps.getProperty("catalog.status")) ? "已加载" : "";
                  }
                  item.setText(new String[] { no, company, station, sendTime, sendStatus, loadTime, loadStatus});
               }
            }
         }
      }
      catch (Exception e) {
         // TODO: handle exception
      }
   }
   
   public void Search(){
      String time = String.valueOf(dtCollectStart.getYear()) + nubmer(dtCollectStart.getMonth()+1)
            +nubmer(dtCollectStart.getDay());
      load(time);
   }
   
   public void SearchForStation(String StationName){
      try {
         tblStation.removeAll();
         Properties stationProps = new Properties();
         Properties props = new Properties();
         InputStreamReader inr = new InputStreamReader(new FileInputStream(System.getProperty("user.dir") + "\\station.properties"), "UTF-8");
         stationProps.load(inr);//加油站信息
         inr.close();
         inr = new InputStreamReader(new FileInputStream(System.getProperty("user.dir") + "\\config.properties"), "UTF-8");
         props.load(inr);//config.properties
         inr.close();
         String fileName = props.getProperty("ftpServer.dasDataDir").toString();
         if(!fileName.endsWith(File.separator)){
            fileName = fileName + File.separator;
         }
         //分公司
         File[] fileDir = new File(fileName).listFiles();
         //每一家分公司
         for(File file : fileDir){
            File[] childFiles = new File(file.getPath()).listFiles();
            boolean isStation = false;
            String company = file.getName();
            //加油站
            for(File childFile : childFiles){
               //找到要查询的加油站
               if(StationName.equals(childFile.getName())){
                  isStation = true;
                  TableItem item = new TableItem(tblStation, SWT.NONE);
                     File[] cfgFiles = new File(childFile.getPath()).listFiles(new com.golead.disService.filter.NameFilter(".cfg"));
                     String station = "";
                     station = childFile.getName().replace(".cfg", "");
                     String no = "";
                     no = stationProps.getProperty(station) == null ? "" : stationProps.getProperty(station).toString();
                     for(File cfgFile : cfgFiles){
                        Properties cfgProps = new Properties();
                        InputStreamReader inSR = new InputStreamReader(new FileInputStream(cfgFile.getPath()), "UTF-8");
                        cfgProps.load(inSR);
                        inSR.close();
                        String sendTime = "";
                        String sendStatus = "";
                        String loadTime = "";
                        String loadStatus = "";
                        sendTime = cfgProps.getProperty("catalog.sendTime")==null ? "" : cfgProps.get("catalog.sendTime").toString();
                        sendStatus = sendTime == "" ? "" : "已传送";
                        loadTime = "加载时间";
                        loadStatus = "finish".equals(cfgProps.getProperty("catalog.status")) ? "已加载" : "";
                        item.setText(new String[] { no, company, station, sendTime, sendStatus, loadTime, loadStatus});
                     }
                  }
               }
            if(!isStation){
               Util.alert(shell, "错误", "没找到该加油站！");
            }
         }
      }
      catch (Exception e) {
         // TODO: handle exception
      }
   }
   
   private String nubmer(int i){
      if(i<10){
         return "0"+String.valueOf(i);
      }
      return String.valueOf(i);
   }
   
   private void findUnload(){
      try {
         tblStation.removeAll();
         Properties stationProps = new Properties();
         Properties props = new Properties();
         InputStreamReader inr = new InputStreamReader(new FileInputStream(System.getProperty("user.dir") + "\\station.properties"), "UTF-8");
         stationProps.load(inr);//加油站信息
         inr.close();
         inr = new InputStreamReader(new FileInputStream(System.getProperty("user.dir") + "\\config.properties"), "UTF-8");
         props.load(inr);//config.properties
         inr.close();
         String fileName = props.getProperty("ftpServer.dasDataDir").toString();
         if(!fileName.endsWith(File.separator)){
            fileName = fileName + File.separator;
         }
         //分公司
         File[] fileDir = new File(fileName).listFiles();
         //每一家分公司
         for(File file : fileDir){
            File[] childFiles = new File(file.getPath()).listFiles();
            String company = file.getName();
            //加油站
            for(File childFile : childFiles){
               File[] cfgFiles = new File(childFile.getPath()).listFiles(new com.golead.disService.filter.NameFilter(".cfg"));
               //加油站当天传送信息
               String station = "";
               station = childFile.getName().replace(".cfg", "");
               String no = "";
               no = stationProps.getProperty(station) == null ? "" : stationProps.getProperty(station).toString();
               for(File cfgFile : cfgFiles){
                  Properties cfgProps = new Properties();
                  InputStreamReader inSR = new InputStreamReader(new FileInputStream(cfgFile.getPath()), "UTF-8");
                  cfgProps.load(inSR);
                  inSR.close();
                  String sendTime = "";
                  String sendStatus = "";
                  String loadTime = "";
                  String loadStatus = "";
                     sendTime = cfgProps.getProperty("catalog.sendTime")==null ? "" : cfgProps.get("catalog.sendTime").toString();
                     sendStatus = sendTime == "" ? "" : "已传送";
                     loadTime = "加载时间";
                     loadStatus = "finish".equals(cfgProps.getProperty("catalog.status")) ? "已加载" : "";
                     if(!"finish".equals(loadStatus)){
                        TableItem item = new TableItem(tblStation, SWT.NONE);
                        item.setText(new String[] { no, company, station, sendTime, sendStatus, loadTime, loadStatus});
                     }
               }
            }
         }
      }
      catch (Exception e) {
         // TODO: handle exception
      }
   }
}
