package com.golead.disManager.ui.window;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Properties;

import org.eclipse.jface.viewers.TableViewer;
import org.eclipse.jface.viewers.TableViewerColumn;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.MouseAdapter;
import org.eclipse.swt.events.MouseEvent;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Menu;
import org.eclipse.swt.widgets.MenuItem;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.TabFolder;
import org.eclipse.swt.widgets.TabItem;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableColumn;
import org.eclipse.swt.widgets.TableItem;
import org.eclipse.swt.widgets.ToolBar;
import org.eclipse.swt.widgets.ToolItem;
import org.eclipse.wb.swt.SWTResourceManager;

import swing2swt.layout.BorderLayout;

import com.golead.disManager.communication.CommunicationClient;
import com.golead.disManager.communication.CommunicationClientCallback;
import com.golead.disManager.dao.JdbcDao;
import com.golead.disManager.dao.model.Company;
import com.golead.disManager.ui.composite.GasStationComposite;
import com.golead.disManager.ui.composite.LogComposite;
import com.golead.disManager.ui.dialog.AboutDialog;
import com.golead.disManager.ui.dialog.MonitorDialog;
import com.golead.disManager.ui.provider.StationContentProvider;
import com.golead.disManager.ui.provider.StationTableLabelProvider;
import com.golead.disManager.util.Util;
import com.golead.disService.filter.NameFilter;

public class DisWindow {

   protected Shell                          shell;

   private Map<String, CommunicationClient> commClients;
   private JdbcDao                          jdbcDao;
   private Properties                       properties;
   private List<Company>                    companies;
   private LogComposite                     logComposite;
   private GasStationComposite                     gasStationComposite;
   private Display                          display;
   private Table                            tblDataLoad;
   private Table                            tblStation;
   private TableViewer                      tbvStation;
   private boolean       loaded = false;
   private boolean       isLink = false;
   public DisWindow(Properties properties) {
      this.properties = properties;
   }

   /**
    * Open the window.
    */
   public void open() {
      display = Display.getDefault();
      createContents();
      loaded = true;
      loadComposite(0);
      commClients = new HashMap<String, CommunicationClient>();
      // jdbcDao = new JdbcDao(properties);

      // loadCompany();
      shell.open();
      shell.layout();
      while (!shell.isDisposed()) {
         if (!display.readAndDispatch()) {
            display.sleep();
         }
      }
   }

   private void loadCompany() {
      companies = new ArrayList<Company>();
      jdbcDao.openConnection();
      if (jdbcDao.getConnection() == null) {
         Util.alert(display, "提示", "数据库连接失败！");
         return;
      }
      String sql = "select id,orgCode,name,treelevel from sysorg order by treelevel";
      try {
         ResultSet rs = jdbcDao.query(sql);
         while (rs != null && rs.next()) {
            Company c = new Company();
            c.setId(rs.getInt(0));
            c.setCode(rs.getString(1));
            c.setName(rs.getString(2));
            companies.add(c);
         }
      } catch (SQLException e) {
         e.printStackTrace();
      }
      jdbcDao.closeConnection();
   }

   protected void createContents() {
      shell = new Shell();
      shell.setSize(800, 500);
      shell.setImage(SWTResourceManager.getImage(DisWindow.class, "/images/monitor16.png"));
      shell.setMaximized(true);
      shell.setText("国力数据采集监控系统");
      shell.setLayout(new swing2swt.layout.BorderLayout(0, 0));

      ToolBar toolbar = new ToolBar(shell, SWT.FLAT);
      toolbar.setFont(SWTResourceManager.getFont("微软雅黑", 12, SWT.NORMAL));
      toolbar.setLayoutData(BorderLayout.NORTH);

      ToolItem btnExit = new ToolItem(toolbar, SWT.NONE);
      btnExit.addSelectionListener(new SelectionAdapter() {
         @Override
         public void widgetSelected(SelectionEvent e) {
            int rc = Util.confirm(shell, "退出", "是否真的退出系统？");
            if (rc == SWT.YES) System.exit(0);
         }
      });
      btnExit.setImage(SWTResourceManager.getImage(DisWindow.class, "/images/exit24.png"));
      btnExit.setText("  退出  ");
      
      ToolItem btnStation = new ToolItem(toolbar, SWT.NONE);
      btnStation.addSelectionListener(new SelectionAdapter() {
         @Override
         public void widgetSelected(SelectionEvent e) {
            MonitorDialog md = new MonitorDialog(shell, SWT.NONE | SWT.APPLICATION_MODAL);
            md.open();
         }
      });
      btnStation.setImage(SWTResourceManager.getImage(DisWindow.class, "/images/monitor24.png"));
      btnStation.setText("加油站监控");
      
      ToolItem btnDataLoad = new ToolItem(toolbar, SWT.NONE);
      btnDataLoad.setImage(SWTResourceManager.getImage(DisWindow.class, "/images/data24.png"));
      btnDataLoad.setText("数据加载");

      ToolItem btnLog = new ToolItem(toolbar, SWT.NONE);
      btnLog.setImage(SWTResourceManager.getImage(DisWindow.class, "/images/book24.png"));
      btnLog.setText("加载日志");

      ToolItem btnConfig = new ToolItem(toolbar, SWT.NONE);
      btnConfig.setImage(SWTResourceManager.getImage(DisWindow.class, "/images/config24.png"));
      btnConfig.setText("  配置  ");

      ToolItem btnAbout = new ToolItem(toolbar, SWT.NONE);
      btnAbout.addSelectionListener(new SelectionAdapter() {
         @Override
         public void widgetSelected(SelectionEvent e) {
            AboutDialog cd = new AboutDialog(shell, SWT.NONE | SWT.APPLICATION_MODAL);
            cd.open();
         }
      });
      btnAbout.setImage(SWTResourceManager.getImage(DisWindow.class, "/images/about24.png"));
      btnAbout.setText("关于系统");
      

      TabFolder tabFolder = new TabFolder(shell, SWT.NONE);
      tabFolder.setFont(SWTResourceManager.getFont("微软雅黑", 10, SWT.NORMAL));
      tabFolder.setLayoutData(BorderLayout.CENTER);
      tabFolder.addSelectionListener(new SelectionAdapter() {
         @Override
         public void widgetSelected(SelectionEvent e) {
            if (!loaded) return;
            int idx = ((TabFolder) e.getSource()).getSelectionIndex();
            loadComposite(idx);
         }
      });
      
      TabItem tbniStation = new TabItem(tabFolder, SWT.NONE);
      tbniStation.setText("   加油站   ");
      gasStationComposite = new GasStationComposite(tabFolder, SWT.NONE);
      tbniStation.setControl(gasStationComposite);

      TabItem tbniDataLoad = new TabItem(tabFolder, SWT.NONE);
      tbniDataLoad.setText("  数据加载  ");

      tblDataLoad = new Table(tabFolder, SWT.BORDER | SWT.FULL_SELECTION);
      tblDataLoad.addMouseListener(new MouseAdapter() {
         @Override
         public void mouseDown(MouseEvent e) {
         }
      });
      tbniDataLoad.setControl(tblDataLoad);
      tblDataLoad.setHeaderVisible(true);
      tblDataLoad.setLinesVisible(true);

      Menu popDataLoad = new Menu(shell);
      tblDataLoad.setMenu(popDataLoad);
      MenuItem popItem = new MenuItem(popDataLoad, SWT.NONE);
      popItem.setText("New Item");

      MenuItem mntmNewItem_1 = new MenuItem(popDataLoad, SWT.NONE);
      mntmNewItem_1.setText("New Item");

      MenuItem mntmNewItem_2 = new MenuItem(popDataLoad, SWT.NONE);
      mntmNewItem_2.setText("New Item");

      TabItem tbniLog = new TabItem(tabFolder, SWT.NONE);
      tbniLog.setText("  数据日志  ");
      logComposite = new LogComposite(tabFolder, SWT.NONE);
      tbniLog.setControl(logComposite);
   }
   
   private void loadComposite(int idx) {
      if (idx == 0) gasStationComposite.load();
      if (idx == 2) logComposite.load();
   }
}
